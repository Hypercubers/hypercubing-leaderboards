variants & programs

let (variant_case, variant_name) = match variant {
                    VariantQuery::All => (1, None),
                    VariantQuery::Default => (2, None),
                    VariantQuery::Named(name) => (3, Some(name)),
                };

                let (program_case, program_list): (i32, &[String]) = match program {
                    ProgramQuery::Default => (1, &[]),
                    ProgramQuery::Material => (2, &[]),
                    ProgramQuery::Virtual => (3, &[]),
                    ProgramQuery::Any => (4, &[]),
                    ProgramQuery::Programs(items) => (5, items),
                };

                            AND CASE
                                    WHEN $8 = 1 THEN TRUE
                                    WHEN $8 = 2 THEN variant_id IS NULL
                                    ELSE variant_name = $9
                                END
                            AND CASE
                                    WHEN TRUE THEN TRUE -- TODO TODO TODO: fix this
                                    WHEN $10 = 1 THEN program_material = NULLIF(variant_material_by_default, false)
                                    WHEN $10 = 2 THEN program_material
                                    WHEN $10 = 3 THEN NOT program_material
                                    WHEN $10 = 4 THEN TRUE
                                    ELSE program_abbr = ANY($11)
                                END
